#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1


# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed
TARGETS=i686-w64-mingw32 x86_64-w64-mingw32
SHLIBDEPS_FLAGS = -v \
	-l/usr/lib/x86_64-linux-gnu/wine/ \
	-l/usr/lib/i386-linux-gnu/wine/

%:
	dh $@ 

override_dh_auto_clean:
	for target in $(TARGETS); do \
		rm -f $$target-helloworld.exe ; \
		$(MAKE) -C $(CURDIR)/run-native "TARGET=$$target" clean ; \
	done


override_dh_auto_build:
	for target in $(TARGETS); do \
		$$target-gcc -o $$target-helloworld.exe helloworld.c ; \
		$(MAKE) -C $(CURDIR)/run-native "TARGET=$$target" ; \
	done

override_dh_shlibdeps:
	echo dh_shlibdeps --dpkg-shlibdeps-params="$(SHLIBDEPS_FLAGS)"
	dh_shlibdeps --dpkg-shlibdeps-params="$(SHLIBDEPS_FLAGS)"


# dh_make generated override targets
# This is example for Cmake (See https://bugs.debian.org/641051 )
#override_dh_auto_configure:
#	dh_auto_configure -- #	-DCMAKE_LIBRARY_PATH=$(DEB_HOST_MULTIARCH)


# Local Variables:
# compile-command: "(cd .. && debuild)"
# End:
